// Memoria de 16,384 registros, cada uno de 16 bits de ancho.
CHIP RAM16K {
    IN in[16], load, address[14];    // Entradas: valor de 16 bits, control de carga, dirección de 14 bits
    OUT out[16];                     // Salida: valor almacenado en la dirección seleccionada

    PARTS:
    // DMux4Way: distribuye la señal load a uno de los 4 RAM4K según los 2 bits superiores de address
    DMux4Way(in=load, sel=address[12..13], a=load0, b=load1, c=load2, d=load3);

    // 4 RAM4K: cada uno maneja 4,096 registros, usando los 12 bits inferiores de address
    RAM4K(in=in, load=load0, address=address[0..11], out=out0);
    RAM4K(in=in, load=load1, address=address[0..11], out=out1);
    RAM4K(in=in, load=load2, address=address[0..11], out=out2);
    RAM4K(in=in, load=load3, address=address[0..11], out=out3);

    // Mux4Way16: selecciona la salida de uno de los 4 RAM4K según los 2 bits superiores de address
    Mux4Way16(a=out0, b=out1, c=out2, d=out3, sel=address[12..13], out=out);
}
